# ################### It just worksâ„¢ keybinds ###################

$scriptsDir = $HOME/.config/hypr/hyprland/scripts/
$screenshot = $scriptsDir/screenshot

# Volume
# bindl = ,XF86AudioMute, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0%
#bindle= ALT, Z, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+ && play /usr/share/sounds/ocean/stereo/audio-volume-change.oga
#bindle= ALT, X, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && play /usr/share/sounds/ocean/stereo/audio-volume-change.oga

bind = ALT, Z, exec, pactl set-sink-volume @DEFAULT_SINK@ +5% && /home/ein/.config/hypr/hyprland/scripts/volume
bind = ALT, X, exec, pactl set-sink-volume @DEFAULT_SINK@ -5% && /home/ein/.config/hypr/hyprland/scripts/volume
bind = ALT, C, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle && /home/ein/.config/hypr/hyprland/scripts/volume

# Brightness
# Uncomment these if you can't get AGS to work
#bindle=, XF86MonBrightnessUp, exec, brightnessctl set '12.75+'
#bindle=, XF86MonBrightnessDown, exec, brightnessctl set '12.75-'

# ################################### Applications ###################################
# Apps: just normal apps
#bind = Super+Shift, D, exec, code --password-store=gnome --enable-features=UseOzonePlatform --ozone-platform=wayland
bind = Super, Return, exec, uwsm app -- kitty.desktop
bind = Super+Shift, Return, exec, uwsm app -- kitty --class 'kittyF' 
# bind = Super, Return, exec, foot --override shell=fish
bind = Super, E, exec, uwsm app -- dolphin
# bind = Super+Alt, E, exec, thunar
bind = Super, W, exec, uwsm app -- qutebrowser
# bind = Control+Super, W, exec, thorium-browser --ozone-platform-hint=wayland --gtk-version=4 --ignore-gpu-blocklist --enable-features=TouchpadOverscrollHistoryNavigation
# bind = Control+Super+Alt, E, exec, /usr/bin/microsoft-edge-stable --password-store=gnome --ozone-platform-hint=wayland --gtk-version=4 --ignore-gpu-blocklist --enable-features=TouchpadOverscrollHistoryNavigation
# bind = Super, X, exec, gnome-text-editor --new-window
# bind = Super+Shift, W, exec, wps
bind = Super+Ctrl, K, exec, uwsm app -- kleopatra

# Apps: Settings and config
bind = Super, I, exec, XDG_CURRENT_DESKTOP="gnome" gnome-control-center
bind = Super+Alt, V, exec, uwsm app -- pwvucontrol
bind = Control+Super+Shift, V, exec, uwsm app -- easyeffects
bind = Control+Shift, Escape, exec, uwsm app -- kitty htop

# Actions
bind = Super, Period, exec, pkill fuzzel || ~/.local/bin/fuzzel-emoji
bind = Super, Q, killactive,
bind = Super, V, togglefloating,
bind = Shift+Super+Alt, Q, exec, hyprctl kill
bind = Control+Shift+Alt, Delete, exec, pkill wlogout || wlogout -p layer-shell
bind = Control+Shift+Alt+Super, Delete, exec, systemctl poweroff || loginctl poweroff

bind = Super+Shift, B, exec, killall -SIGUSR1 waybar # Toggle waybar

# MPD
bind = Super, grave, exec, mpc toggle
bind = Super+Shift, grave, exec, mpc stop
bind = Super+ctrl, x, exec, mpc next
bind = Super+ctrl, z, exec, mpc prev

# Screenshot, Record, OCR, Color picker, Clipboard history
bind = Super+Shift, S, exec, $screenshot --now
bind = Super+Control, S, exec, $screenshot --win
bind = Super, S, exec, $screenshot --area
# bind = Super+Shift+Alt, S, exec, grim -g "$(slurp)" - | swappy -f -
# bindl=,Print,exec,grim - | wl-copy
# bind = Super+Shift, S, exec, ~/.config/ags/scripts/grimblast.sh --freeze copy area
bind = Super+Alt, R, exec, ~/.config/hypr/hyprland/scripts/record-script.sh --sound
bind = Control+Alt, R, exec, ~/.config/hypr/hyprland/scripts/record-script.sh --fullscreen
bind = Super+Shift+Alt, R, exec, ~/.config/hypr/hyprland/scripts/record-script.sh --fullscreen-sound
bind = Super+Shift, A, exec, hyprpicker -a
#bind = Super+Shift, C, exec, kitty --class clipse -e 'clipse' 
bind = Super+Shift, C, exec, pkill fuzzel || cliphist list | fuzzel  --match-mode fzf --dmenu | cliphist decode | wl-copy # Clipboard history >> clipboard
bind = Super+ctrl+Shift, C, exec, cliphist wipe

# Text-to-image
# Normal
bind = Control+Super+Shift,S,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract "tmp.png" - | wl-copy && rm "tmp.png"
# English
bind = Super+Shift,T,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract -l eng "tmp.png" - | wl-copy && rm "tmp.png"
# Japanese
bind = Super+Shift,J,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract -l jpn "tmp.png" - | wl-copy && rm "tmp.png"

# Media
bindl= Super+Shift, N, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
bindl= ,XF86AudioNext, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
bind = Super+Shift+Alt, mouse:275, exec, playerctl previous
bind = Super+Shift+Alt, mouse:276, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
bindl= Super+Shift, B, exec, playerctl previous
bindl= Super+Shift, P, exec, playerctl play-pause
bindl= ,XF86AudioPlay, exec, playerctl play-pause

# Lock screen
bind = Super, L, exec, uwsm app -- hyprlock

# App launcher
bind = Super, D, exec, ~/.config/hypr/hyprland/scripts/uwsm-wofi-launcher.sh
#bind = Super, D, exec, tofi-drun
#bind = Super, D, exec, uwsm app -- walker --modules applications,runner

# ##################################### AGS keybinds #####################################
#bindr = Control+Super, R, exec, killall ags ydotool; ags &
#bindr = Control+Super+Alt, R, exec, hyprctl reload; killall ags ydotool; ags &
bind = Control+Super, T, exec, ~/.config/ags/scripts/color_generation/switchwall.sh
#bind = Control+Super, T, exec, waypaper-engine r --script="/home/ein/.config/ags/scripts/color_generation/switchcolor.sh"
#bind = Control+Super, Z, exec, waypaper-engine next-image 
#bind = Control+Super, X, exec, waypaper-engine previous-image
#bind = Control+Alt, Slash, exec, ags run-js 'cycleMode();'
# bindir = Super, Super_L, exec, ags -t 'overview'
#bind = Super, D, exec, ags -t 'overview'
bind = Super, Slash, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "cheatsheet""$i"; done # Show cheatsheet
bind = Super, B, exec, ags -t 'sideleft'
bind = Super+Shift, A, exec, ags -t 'sideleft'
bind = Super, O, exec, ags -t 'sideleft'
bind = Super, N, exec, ags -t 'sideright'
bind = Super, M, exec, ags run-js 'openMusicControls.value = (!mpris.getPlayer() ? true : !openMusicControls.value);'
bind = Super, Comma, exec, ags run-js 'openColorScheme.value = true; Utils.timeout(2000, () => openColorScheme.value = false);'
bind = Super, K, exec, for ((i=0; i<$(xrandr --listmonitors | grep -c 'Monitor'); i++)); do ags -t "osk""$i"
#bind = Alt, F4, exec, ags -t 'session'
bind = Super+Shift, E, exec, eject -T
bind = Super, F4, exec, systemctl suspend
bind = Super, F3, exec, hyprctl dispatch exit && systemctl --user stop wayland-wm@*.service
bind = Super, F2, exec, systemctl reboot
bind = Super+Shift, F2, exec, systemctl soft-reboot
bind = Super, F1, exec, systemctl poweroff
#bindle = , XF86AudioRaiseVolume, exec, ags run-js 'indicator.popup(1);'
#bindle = , XF86AudioLowerVolume, exec, ags run-js 'indicator.popup(1);'
#bindle = ALT, Z, exec, ags run-js 'indicator.popup(1);'
#bindle = ALT, X, exec, ags run-js 'indicator.popup(1);'
#bindle=, XF86MonBrightnessUp, exec, ags run-js 'brightness.screen_value += 0.05; indicator.popup(1);'
#bindle=, XF86MonBrightnessDown, exec, ags run-js 'brightness.screen_value -= 0.05; indicator.popup(1);'
#bindl  = , XF86AudioMute, exec, ags run-js 'indicator.popup(1);'

# ##################################### Plugins #########################################
# bind = Control+Super, P, exec, hyprctl plugin load "~/.config/hypr/plugins/droidbars.so"
bind = Control+Super, O, exec, hyprctl plugin unload "~/.config/hypr/plugins/droidbars.so"

# Testing
# bind = SuperAlt, f12, exec, notify-send "Hyprland version: $(hyprctl version | head -2 | tail -1 | cut -f2 -d ' ')" "owo" -a 'Hyprland keybind'
# bind = Super+Alt, f12, exec, notify-send "Millis since epoch" "$(date +%s%N | cut -b1-13)" -a 'Hyprland keybind'
bind = Super+Alt, f12, exec, notify-send 'Test notification' "Here's a really long message to test truncation and wrapping\nYou can middle click or flick this notification to dismiss it!" -a 'Shell' -A "Test1=I got it!" -A "Test2=Another action" -t 5000
bind = Super+Alt, Equal, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind'

# ########################### Keybinds for Hyprland ############################
# Swap windows
bind = Super+Shift, left, movewindow, l
bind = Super+Shift, right, movewindow, r
bind = Super+Shift, up, movewindow, u
bind = Super+Shift, down, movewindow, d
bind = Super, T, pin

# Move focus with mainMod + arrow keys
bind = Super, left, movefocus, l
bindle = Super, left, bringactivetotop
bind = Super, right, movefocus, r
bindle = Super, right, bringactivetotop
bind = Super, up, movefocus, u
bindle = Super, up, bringactivetotop
bind = Super, down, movefocus, d
bindle = Super, down, bringactivetotop

# Workspace, window, tab switch with keyboard
bind = Control+Super, right, workspace, +1
bind = Control+Super, left, workspace, -1
bind = Super, mouse:275, workspace, -1
bind = Super, mouse:276, workspace, +1
bind = Control+Super, BracketLeft, workspace, -1
bind = Control+Super, BracketRight, workspace, +1
bind = Control+Super, up, workspace, -5
bind = Control+Super, down, workspace, +5
bind = Super, Page_Down, workspace, +1
bind = Super, Page_Up, workspace, -1
bind = Control+Super, Page_Down, workspace, +1
bind = Control+Super, Page_Up, workspace, -1
bind = Super+Alt, Page_Down, movetoworkspace, +1
bind = Super+Alt, Page_Up, movetoworkspace, -1
bind = Super+Shift, Page_Down, movetoworkspace, +1
bind = Super+Shift, Page_Up, movetoworkspace, -1
bind = Control+Super+Shift, Right, movetoworkspace, +1
bind = Control+Super+Shift, Left, movetoworkspace, -1
bind = Super+Shift, mouse_down, movetoworkspace, -1
bind = Super+Shift, mouse_up, movetoworkspace, +1
bind = Super+Alt, mouse_down, movetoworkspace, -1
bind = Super+Alt, mouse_up, movetoworkspace, +1

bind = Super, J, togglesplit, # dwindle
bind = Super, A, centerwindow

# Window split ratio
binde = Super, Minus, splitratio, -0.1
binde = Super, Equal, splitratio, 0.1
binde = Super, Semicolon, splitratio, -0.1
binde = Super, Apostrophe, splitratio, 0.1

# Fullscreen
bind = Super, F, fullscreen, 0
# bind = Super, D, fullscreen, 1
bind = Super_Alt, F, fullscreenstate, -1

# Switching
bind = Super, 1, workspace, 1
bind = Super, 2, workspace, 2
bind = Super, 3, workspace, 3
bind = Super, 4, workspace, 4
bind = Super, 5, workspace, 5
bind = Super, 6, workspace, 6
bind = Super, 7, workspace, 7
bind = Super, 8, workspace, 8
bind = Super, 9, workspace, 9
bind = Super, 0, workspace, 10
bind = Super, Tab, togglespecialworkspace,
bind = Super+Shift, Tab, togglespecialworkspace,
bind = Alt, Tab, cyclenext
bind = Alt, Tab, bringactivetotop,   # bring it to the tp

# Move window to workspace Super + Alt + [0-9]
bind = Super+Shift, 1, movetoworkspacesilent, 1
bind = Super+Shift, 2, movetoworkspacesilent, 2
bind = Super+Shift, 3, movetoworkspacesilent, 3
bind = Super+Shift, 4, movetoworkspacesilent, 4
bind = Super+Shift, 5, movetoworkspacesilent, 5
bind = Super+Shift, 6, movetoworkspacesilent, 6
bind = Super+Shift, 7, movetoworkspacesilent, 7
bind = Super+Shift, 8, movetoworkspacesilent, 8
bind = Super+Shift, 9, movetoworkspacesilent, 9
bind = Super+Shift, 0, movetoworkspacesilent, 10
bind = Control+Shift+Super, Up, movetoworkspacesilent, special
bind = Super+Alt, S, movetoworkspacesilent, special

# Scroll through existing workspaces with (Control) + Super + scroll
bind = Super, mouse_up, workspace, +1
bind = Super, mouse_down, workspace, -1
bind = Control+Super, mouse_up, workspace, +1
bind = Control+Super, mouse_down, workspace, -1

# to switch between windows in a floating workspace
bind = SUPER+Ctrl, A, cyclenext, prev tiled # change focus to tiling
bind = SUPER+Ctrl+Shift, A, cyclenext, floating # change focus to floating

# Cycle through existing workspaces
bind = Super+Shift, Z, workspace, e-1
bind = Super+Shift, X, workspace, e+1

# Move/resize windows with Super + LMB/RMB and dragging
bindm = Super, mouse:272, movewindow
bindm = Super, mouse:273, resizewindow
# bindm = Super, mouse:274, movewindow
bindm = Super, Z, movewindow
bind = Control+Super, Backslash, resizeactive, exact 640 480

# Resize ative window with mainMod + arrow keys
bind = Super+Control+Shift, right, resizeactive, 10 0
bind = Super+Control+Shift, left, resizeactive, -10 0
bind = Super+Control+Shift, up, resizeactive, 0 -10
bind = Super+Control+Shift, down, resizeactive, 0 10

# Arrow keys with IJKL
# bindle = Alt, I, exec, ydotool key 103:1 103:0
# bindle = Alt, K, exec, ydotool key 108:1 108:0
# bindle = Alt, J, exec, ydotool key 105:1 105:0
# bindle = Alt, L, exec, ydotool key 106:1 106:0
# Control + Side mouse btn for switching tabs (Ctrl+PgUp/PgDn)
# bind = Control, mouse:275, exec, ydotool key 29:1 104:1 104:0 29:0
# bind = Control, mouse:276, exec, ydotool key 29:1 109:1 109:0 29:0

# NiflVeil bindings
# Minimize current window and updates the interface
bind = Super, M, exec, /usr/local/bin/niflveil minimize

# Opens the EWW interface
bind = Super, I, exec, /usr/local/bin/niflveil restore

# Restore the last minimized window
bind = Super, U, exec, /usr/local/bin/niflveil restore-last

# Restore all minimized windows 
bind = Super+Shift, U, exec, /usr/local/bin/niflveil restore-all
