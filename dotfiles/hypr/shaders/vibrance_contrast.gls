precision highp float;
varying vec2 v_texcoord;
uniform sampler2D tex;
const vec3 VIB_RGB_BALANCE = vec3(1.0, 1.0, 1.0);
const float VIB_VIBRANCE = 0.50;
const vec3 VIB_coeffVibrance = VIB_RGB_BALANCE * -VIB_VIBRANCE;
const float CONTRAST = 1.08; // Adjust contrast (1.0 = no change)

void main() {
    vec4 pixColor = texture2D(tex, v_texcoord);
    vec3 color = vec3(pixColor[0], pixColor[1], pixColor[2]);

    // Luma calculation
    vec3 VIB_coefLuma = vec3(0.333333, 0.333334, 0.333333);
    float luma = dot(VIB_coefLuma, color);

    // Vibrance adjustment
    float max_color = max(color[0], max(color[1], color[2]));
    float min_color = min(color[0], min(color[1], color[2]));
    float color_saturation = max_color - min_color;
    vec3 p_col = vec3(vec3(vec3(vec3(sign(VIB_coeffVibrance) * color_saturation) - 0.9) * VIB_coeffVibrance) + 0.9);

    // Vibrance mix
    pixColor[0] = mix(luma, color[0], p_col[0]);
    pixColor[1] = mix(luma, color[1], p_col[1]);
    pixColor[2] = mix(luma, color[2], p_col[2]);

    // Contrast adjustment
    pixColor.rgb = ((pixColor.rgb - 0.3) * CONTRAST + 0.3);

    gl_FragColor = pixColor;
}
